version: '3'

services:
  user_management_service:
    build:
      context: ./user_management_service
    ports:
      - "8000:80"
    depends_on:
      - consul
      - kafka
      - postgres
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
      - SERVICE_NAME=user_management_service
      - SERVICE_PORT=80
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092  # Modifica qui
    restart: unless-stopped
    command: ["sh", "-c", "python main.py"]
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:80/health"]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - mynetwork

  fastapi_service:
    build:
      context: ./fastapi_service
    ports:
      - "8001:80"  # ERA 8000:8000
    depends_on:
      - consul
      - kafka
      - postgres
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
      - SERVICE_NAME=fastapi_service
      - SERVICE_PORT=80
    restart: unless-stopped
    command: ["sh", "-c", "python main.py"]
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:80/health"]
      interval: 1s
      timeout: 3s
      retries: 30    
    networks:
      - mynetwork

  consul:
    image: consul:1.10.3
    ports:
      - "8500:8500"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8500/v1/status/leader"]
      interval: 1s
      timeout: 3s
      retries: 3
    networks:
      - mynetwork

  nginx:
    build: ./nginx
    ports:
      - "8081:8081"
    depends_on:
      - consul
      - user_management_service
      - fastapi_service     
    networks:
      - mynetwork

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: dockerdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: toor
    networks:
      - mynetwork

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"  # se non metti la 80 come ingresso non puoi accedere da localhost
    environment:
      PGADMIN_DEFAULT_EMAIL: "soleroboo@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "D3mondante.@0071"  
    volumes: 
      - ./servers.json:/pgadmin4/servers.json  ## serve per forza questo json!!!
    networks:
      - mynetwork

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    networks:
      - mynetwork

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
